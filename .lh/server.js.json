{
    "sourceFile": "server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1731024357278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731024422079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+const express = require('express');\r\n+const app = express();\r\n+const port = 3000;\r\n+\r\n+app.use(express.json());\r\n+\r\n+let posts = [];\r\n+\r\n+app.get('/posts', (req, res) => {\r\n+    res.json(posts);\r\n+});\r\n+\r\n+app.post('/posts', (req, res) => {\r\n+    const { content, organization } = req.body;\r\n+    const newPost = { _id: Date.now().toString(), content, organization, likes: [] };\r\n+    posts.push(newPost);\r\n+    res.json(newPost);\r\n+});\r\n+\r\n+app.post('/posts/:postId/like', (req, res) => {\r\n+    const { postId } = req.params;\r\n+    const { userId } = req.body;\r\n+    const post = posts.find(p => p._id === postId);\r\n+    if (post) {\r\n+        if (!post.likes.includes(userId)) {\r\n+            post.likes.push(userId);\r\n+        }\r\n+        res.json(post);\r\n+    } else {\r\n+        res.status(404).send('Post not found');\r\n+    }\r\n+});\r\n+\r\n+app.listen(port, () => {\r\n+    console.log(`Server running at http://localhost:${port}`);\r\n+});\r\n"
                }
            ],
            "date": 1731024357278,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.use(express.json());\r\n\r\nlet posts = [];\r\n\r\napp.get('/posts', (req, res) => {\r\n    res.json(posts);\r\n});\r\n\r\napp.post('/posts', (req, res) => {\r\n    const { content, organization } = req.body;\r\n    const newPost = { _id: Date.now().toString(), content, organization, likes: [] };\r\n    posts.push(newPost);\r\n    res.json(newPost);\r\n});\r\n\r\napp.post('/posts/:postId/like', (req, res) => {\r\n    const { postId } = req.params;\r\n    const { userId } = req.body;\r\n    const post = posts.find(p => p._id === postId);\r\n    if (post) {\r\n        if (!post.likes.includes(userId)) {\r\n            post.likes.push(userId);\r\n        }\r\n        res.json(post);\r\n    } else {\r\n        res.status(404).send('Post not found');\r\n    }\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server running at http://localhost:${port}`);\r\n});\r\n"
        }
    ]
}