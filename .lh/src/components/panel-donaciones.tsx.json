{
    "sourceFile": "src/components/panel-donaciones.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731952548178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731952548178,
            "name": "Commit-0",
            "content": "'use client'\n\nimport { useState, useEffect, useMemo } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\ntype Donacion = {\n  donorName: string\n  itemType: string\n  quantity: number\n  unit: 'unidad' | 'kg'\n  valuePerUnit: number\n  totalValue: number\n  createdAt: string\n}\n\nexport function PanelDonacionesComponent() {\n  const [donaciones, setDonaciones] = useState<Donacion[]>([])\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isOrganization, setIsOrganization] = useState(false)\n  const [charityId, setCharityId] = useState(\"\")\n  const [totalValue, setTotalValue] = useState(0)\n  const router = useRouter()\n\n  const checkAuthentication = async () => {\n    const token = localStorage.getItem('authToken')\n    if (!token) {\n      router.push('/logind')\n      return\n    }\n\n    try {\n      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      })\n\n      if (!res.ok) {\n        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n      }\n\n      const data = await res.json()\n      if (data.charity && data.charity.userType === 'charity') {\n        setIsAuthenticated(true)\n        setIsOrganization(true)\n        setCharityId(data.charity.id) // Guardar charityId en el estado\n      } else {\n        router.push('/logind')\n      }\n    } catch (error) {\n      console.error('Error obteniendo el usuario:', error)\n      router.push('/logind')\n    }\n  }\n\n  useEffect(() => {\n    checkAuthentication()\n  }, [])\n\n  useEffect(() => {\n    const fetchDonaciones = async () => {\n      if (!charityId) return\n\n      try {\n        const res = await fetch(`http://localhost:3001/mercadopago/report/in-kind/${charityId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        })\n\n        if (!res.ok) {\n          throw new Error(`Error fetching donations: ${res.status} ${res.statusText}`)\n        }\n\n        const data = await res.json()\n        setDonaciones(data.report)\n        setTotalValue(data.totalValue)\n      } catch (error) {\n        console.error('Error fetching donations:', error)\n      }\n    }\n\n    if (isAuthenticated && isOrganization) {\n      fetchDonaciones()\n    }\n  }, [charityId, isAuthenticated, isOrganization])\n\n  const totalProductos = donaciones.reduce((acc, donacion) => acc + donacion.quantity, 0)\n\n  const mayorDonante = useMemo(() => {\n    const donantesAgrupados = donaciones.reduce((acc, donacion) => {\n      if (!acc[donacion.donorName]) {\n        acc[donacion.donorName] = 0\n      }\n      acc[donacion.donorName] += donacion.totalValue\n      return acc\n    }, {} as Record<string, number>)\n\n    return Object.entries(donantesAgrupados).reduce((a, b) => a[1] > b[1] ? a : b)\n  }, [donaciones])\n\n  if (!isAuthenticated || !isOrganization) {\n    return <div>Cargando...</div>\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#ECE3D4] p-8\">\n      <h1 className=\"text-3xl font-bold mb-6 text-[#042637] text-center\">Panel de Donaciones</h1>\n      \n      <div className=\"grid gap-6 mb-8 md:grid-cols-3\">\n        <Card className=\"bg-[#E1DDBF] border-[#042637]\">\n          <CardHeader>\n            <CardTitle className=\"text-[#042637]\">Total Donaciones</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-3xl font-bold text-[#042637]\">${totalValue.toFixed(2)}</p>\n          </CardContent>\n        </Card>\n        \n        <Card className=\"bg-[#E1DDBF] border-[#042637]\">\n          <CardHeader>\n            <CardTitle className=\"text-[#042637]\">Total Productos</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-3xl font-bold text-[#042637]\">{totalProductos}</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-[#E1DDBF] border-[#042637]\">\n          <CardHeader>\n            <CardTitle className=\"text-[#042637]\">Mayor Donante</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-xl font-bold text-[#042637]\">{mayorDonante[0]}</p>\n            <p className=\"text-lg text-[#042637]\">${mayorDonante[1].toFixed(2)}</p>\n          </CardContent>\n        </Card>\n      </div>\n      \n      <Card className=\"bg-[#E1DDBF] border-[#042637]\">\n        <CardHeader>\n          <CardTitle className=\"text-[#042637]\">Lista de Donaciones</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"text-[#042637]\">Donante</TableHead>\n                <TableHead className=\"text-[#042637]\">Producto</TableHead>\n                <TableHead className=\"text-[#042637]\">Cantidad</TableHead>\n                <TableHead className=\"text-[#042637]\">Unidad</TableHead>\n                <TableHead className=\"text-[#042637]\">Valor por Unidad</TableHead>\n                <TableHead className=\"text-[#042637]\">Total</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {donaciones.map((donacion, index) => (\n                <TableRow key={index}>\n                  <TableCell className=\"text-[#042637]\">{donacion.donorName}</TableCell>\n                  <TableCell className=\"text-[#042637]\">{donacion.itemType}</TableCell>\n                  <TableCell className=\"text-[#042637]\">{donacion.quantity}</TableCell>\n                  <TableCell className=\"text-[#042637]\">{donacion.unit}</TableCell>\n                  <TableCell className=\"text-[#042637]\">${donacion.valuePerUnit.toFixed(2)}</TableCell>\n                  <TableCell className=\"text-[#042637]\">${donacion.totalValue.toFixed(2)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"
        }
    ]
}