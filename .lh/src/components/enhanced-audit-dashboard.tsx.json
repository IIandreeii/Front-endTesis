{
    "sourceFile": "src/components/enhanced-audit-dashboard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732001502451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732001502451,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend, LineChart, Line } from 'recharts';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Edit, FileText, Trash2, AlertCircle, Calendar, Clock } from 'lucide-react';\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nconst fetchAuditData = async () => {\n  // In a real application, this would be an API call\n  return [\n    {\n      _id: { $oid: \"673c3983e6b7407bed39ffa6\" },\n      action: \"edit\",\n      charityId: { $oid: \"670447d138c6cbf0d6bc255e\" },\n      donationId: { $oid: \"673c2a55a8ff1cf6522815fb\" },\n      details: {\n        before: { valuePerUnit: 3 },\n        after: { valuePerUnit: 5 }\n      },\n      timestamp: { $date: \"2024-11-19T07:08:51.337Z\" }\n    },\n    {\n      _id: { $oid: \"673c3984e6b7407bed39ffa9\" },\n      action: \"report\",\n      charityId: { $oid: \"670447d138c6cbf0d6bc255e\" },\n      donationId: null,\n      details: {\n        reportType: \"in-kind\",\n        donationIds: [\n          { $oid: \"673c2a55a8ff1cf6522815fb\" },\n          { $oid: \"673c32742cf5d710268154fb\" },\n          { $oid: \"673c375ae6b7407bed39fee0\" }\n        ]\n      },\n      timestamp: { $date: \"2024-11-19T07:08:52.904Z\" }\n    },\n    {\n      _id: { $oid: \"673c3993e6b7407bed39ffad\" },\n      action: \"delete\",\n      charityId: { $oid: \"670447d138c6cbf0d6bc255e\" },\n      donationId: { $oid: \"673c2a55a8ff1cf6522815fb\" },\n      userId: { $oid: \"670447d138c6cbf0d6bc255e\" },\n      details: {\n        before: {\n          donorName: \"Andree leonardo\",\n          itemType: \"leche\",\n          quantity: 5,\n          unit: \"unidad\",\n          valuePerUnit: 5\n        },\n        reason: \"error al registrar\"\n      },\n      timestamp: { $date: \"2024-11-19T07:09:07.572Z\" }\n    }\n  ];\n};\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nexport function EnhancedAuditDashboardComponent() {\n  const [auditData, setAuditData] = useState([]);\n  const [timeFilter, setTimeFilter] = useState('all');\n\n  useEffect(() => {\n    fetchAuditData().then(setAuditData);\n  }, []);\n\n  const filteredData = auditData.filter(audit => {\n    if (timeFilter === 'all') return true;\n    const date = new Date(audit.timestamp.$date);\n    const now = new Date();\n    switch (timeFilter) {\n      case 'today':\n        return date.toDateString() === now.toDateString();\n      case 'week':\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        return date > weekAgo;\n      case 'month':\n        return date.getMonth() === now.getMonth() && date.getFullYear() === now.getFullYear();\n      default:\n        return true;\n    }\n  });\n\n  const actionCounts = filteredData.reduce((acc, audit) => {\n    acc[audit.action] = (acc[audit.action] || 0) + 1;\n    return acc;\n  }, {});\n\n  const pieChartData = Object.entries(actionCounts).map(([name, value]) => ({ name, value }));\n\n  const timelineData = filteredData.reduce((acc, audit) => {\n    const date = new Date(audit.timestamp.$date).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + 1;\n    return acc;\n  }, {});\n\n  const lineChartData = Object.entries(timelineData).map(([date, count]) => ({ date, count }));\n\n  return (\n    <div className=\"min-h-screen p-8\" style={{ backgroundColor: '#ECE3D4' }}>\n      <h1 className=\"text-4xl font-bold mb-8\" style={{ color: '#042637' }}>Enhanced Audit Dashboard</h1>\n      <div className=\"mb-4\">\n        <Select value={timeFilter} onValueChange={setTimeFilter}>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Select time range\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Time</SelectItem>\n            <SelectItem value=\"today\">Today</SelectItem>\n            <SelectItem value=\"week\">This Week</SelectItem>\n            <SelectItem value=\"month\">This Month</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"timeline\">Timeline</TabsTrigger>\n          <TabsTrigger value=\"details\">Audit Details</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"overview\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Total Audits</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-4xl font-bold\" style={{ color: '#042637' }}>{filteredData.length}</div>\n                <p className=\"text-sm text-muted-foreground\">in selected time range</p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle>Audit Actions</CardTitle>\n              </CardHeader>\n              <CardContent className=\"h-[300px]\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={pieChartData}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                      label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    >\n                      {pieChartData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                    <Legend />\n                  </PieChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Activity</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {filteredData.slice(0, 5).map((audit) => (\n                    <li key={audit._id.$oid} className=\"flex items-center space-x-2\">\n                      {audit.action === 'edit' && <Edit size={16} />}\n                      {audit.action === 'report' && <FileText size={16} />}\n                      {audit.action === 'delete' && <Trash2 size={16} />}\n                      <span>{audit.action} - {new Date(audit.timestamp.$date).toLocaleString()}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n        <TabsContent value=\"timeline\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Audit Timeline</CardTitle>\n              <CardDescription>Number of audits over time</CardDescription>\n            </CardHeader>\n            <CardContent className=\"h-[400px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={lineChartData}>\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"count\" stroke=\"#042637\" strokeWidth={2} />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        <TabsContent value=\"details\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Audit Log</CardTitle>\n              <CardDescription>Detailed view of all audit actions</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Timestamp</TableHead>\n                    <TableHead>Action</TableHead>\n                    <TableHead>Details</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredData.map((audit) => (\n                    <TableRow key={audit._id.$oid}>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          <Calendar className=\"h-4 w-4\" />\n                          <span>{new Date(audit.timestamp.$date).toLocaleDateString()}</span>\n                          <Clock className=\"h-4 w-4 ml-2\" />\n                          <span>{new Date(audit.timestamp.$date).toLocaleTimeString()}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={audit.action === 'edit' ? 'default' : audit.action === 'report' ? 'secondary' : 'destructive'}>\n                          {audit.action}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        {audit.action === 'edit' && (\n                          <span>\n                            Value changed from {audit.details.before.valuePerUnit} to {audit.details.after.valuePerUnit}\n                          </span>\n                        )}\n                        {audit.action === 'report' && (\n                          <span>\n                            Report type: {audit.details.reportType}, Donations: {audit.details.donationIds.length}\n                          </span>\n                        )}\n                        {audit.action === 'delete' && (\n                          <span className=\"flex items-center space-x-2\">\n                            <AlertCircle className=\"h-4 w-4 text-red-500\" />\n                            <span>Reason: {audit.details.reason}</span>\n                          </span>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"
        }
    ]
}