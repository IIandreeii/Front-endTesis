{
    "sourceFile": "src/components/component/register.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1732066568994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732154301721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,327 @@\n+\"use client\";\n+\n+import { useState } from \"react\";\n+import { RadioGroup } from \"@/components/ui/radio-group\";\n+import { Button } from \"@/components/ui/button\";\n+import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"@/components/ui/card\";\n+import { Label } from \"@/components/ui/label\";\n+import { Input } from \"@/components/ui/input\";\n+import { Textarea } from \"@/components/ui/textarea\";\n+import { useRouter } from 'next/navigation';\n+\n+export default function Register() {\n+  const router = useRouter();\n+  const [selectedOption, setSelectedOption] = useState(\"donor\");\n+  const [errors, setErrors] = useState({});\n+\n+  const [donorData, setDonorData] = useState({\n+    email: \"\",\n+    password: \"\",\n+    dni: \"\",\n+    apellido: \"\",\n+    nombre: \"\",\n+    userType: \"donor\"\n+  });\n+\n+  const [charityData, setCharityData] = useState({\n+    email: \"\",\n+    password: \"\",\n+    direccion: \"\",\n+    telefono: \"\",\n+    nombre: \"\",\n+    descripcion: \"\",\n+    userType: \"charity\"\n+  });\n+\n+  const handleChange = (e, setData) => {\n+    const { id, value } = e.target;\n+    if (id === 'dni' || id === 'telefono') {\n+      if (!/^\\d*$/.test(value)) return;\n+    }\n+    if ((id === 'nombre' || id === 'apellido') && selectedOption === 'donor') {\n+      if (!/^[a-zA-Z]*$/.test(value)) return; \n+    }\n+    if (id === 'nombre' && selectedOption === 'charity') {\n+      if (!/^[a-zA-Z\\s]*$/.test(value)) return; \n+    }\n+    if (id === 'dni' && value.length > 8) return; \n+    if (id === 'telefono' && value.length > 9) return; \n+    setData(prevState => ({ ...prevState, [id]: value }));\n+  };\n+\n+  const validateEmail = (email) => {\n+    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n+    return re.test(String(email).toLowerCase());\n+  };\n+\n+  const validateDonorData = () => {\n+    const newErrors = {};\n+    if (donorData.nombre.length > 10) newErrors.nombre = \"El nombre no debe tener más de 10 caracteres\";\n+    if (donorData.apellido.length > 20) newErrors.apellido = \"El apellido no debe tener más de 20 caracteres\";\n+    if (!validateEmail(donorData.email)) newErrors.email = \"El email no es válido\";\n+    if (donorData.dni.length !== 8) newErrors.dni = \"El DNI debe tener 8 dígitos\";\n+    return newErrors;\n+  };\n+\n+  const validateCharityData = () => {\n+    const newErrors = {};\n+    if (charityData.nombre.length > 30) newErrors.nombre = \"El nombre no debe tener más de 20 caracteres\";\n+    if (charityData.direccion.length > 30) newErrors.direccion = \"La dirección no debe tener más de 30 caracteres\";\n+    if (!validateEmail(charityData.email)) newErrors.email = \"El email no es válido\";\n+    if (charityData.telefono.length !== 9) newErrors.telefono = \"El teléfono debe tener 9 dígitos\";\n+    if (charityData.descripcion.length > 100) newErrors.descripcion = \"La descripción no debe tener más de 100 caracteres\";\n+    return newErrors;\n+  };\n+\n+  const onSubmit = async (e) => {\n+    e.preventDefault();\n+    let newErrors = selectedOption === \"donor\" ? validateDonorData() : validateCharityData();\n+    if (Object.keys(newErrors).length > 0) {\n+      setErrors(newErrors);\n+      return;\n+    }\n+    setErrors({});\n+    try {\n+      const url = 'http://localhost:3001/signup';\n+      const data = selectedOption === \"donor\" ? { ...donorData, type: 'donor' } : { ...charityData, type: 'charity' };\n+\n+      const res = await fetch(url, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json'\n+        },\n+        body: JSON.stringify(data)\n+      });\n+\n+      if (res.ok) {\n+        // Manejar la respuesta exitosa\n+        router.push('/logind');\n+      } else {\n+        // Manejar errores\n+        console.error('Error en el registro');\n+      }\n+    } catch (error) {\n+      console.error('Error en el registro:', error);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"flex flex-col items-center justify-center mt-10\">\n+      <div className=\"flex justify-center items-center mb-8\">\n+        <RadioGroup value={selectedOption} onValueChange={setSelectedOption} className=\"flex gap-4\">\n+          <Button\n+            id=\"donor\"\n+            value=\"donor\"\n+            className={`rounded-lg px-6 py-2 transition-colors ${\n+              selectedOption === \"donor\"\n+                ? \"bg-primary text-primary-foreground\"\n+                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n+            }`}\n+            onClick={() => setSelectedOption(\"donor\")}\n+          >\n+            Donor\n+          </Button>\n+          <Button\n+            id=\"charity\"\n+            value=\"charity\"\n+            className={`px-6 py-2 transition-colors rounded-lg ${\n+              selectedOption === \"charity\"\n+                ? \"bg-primary text-primary-foreground\"\n+                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n+            }`}\n+            onClick={() => setSelectedOption(\"charity\")}\n+          >\n+            Charity Organization\n+          </Button>\n+        </RadioGroup>\n+      </div>\n+\n+      <form onSubmit={onSubmit}>\n+        {selectedOption === \"donor\" && (\n+          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n+            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n+              <CardTitle className=\"text-2xl font-bold\">Donor Registration</CardTitle>\n+              <CardDescription className=\"text-sm\">Create your donor account</CardDescription>\n+            </CardHeader>\n+            <CardContent className=\"space-y-4 p-6\">\n+              <div className=\"grid grid-cols-2 gap-4\">\n+                <div className=\"space-y-2\">\n+                  <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n+                    First Name\n+                  </Label>\n+                  <Input\n+                    id=\"nombre\"\n+                    placeholder=\"Enter your first name\"\n+                    className=\"border-muted focus:border-primary focus:ring-primary\"\n+                    value={donorData.nombre}\n+                    onChange={(e) => handleChange(e, setDonorData)}\n+                  />\n+                </div>\n+                <div className=\"space-y-2\">\n+                  <Label htmlFor=\"apellido\" className=\"text-sm font-medium\">\n+                    Last Name\n+                  </Label>\n+                  <Input\n+                    id=\"apellido\"\n+                    placeholder=\"Enter your last name\"\n+                    className=\"border-muted focus:border-primary focus:ring-primary\"\n+                    value={donorData.apellido}\n+                    onChange={(e) => handleChange(e, setDonorData)}\n+                  />\n+                </div>\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"dni\" className=\"text-sm font-medium\">\n+                  DNI\n+                </Label>\n+                <Input\n+                  id=\"dni\"\n+                  placeholder=\"Enter your DNI\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.dni}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n+                  Email\n+                </Label>\n+                <Input\n+                  id=\"email\"\n+                  type=\"email\"\n+                  placeholder=\"Enter your email\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.email}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n+                  Password\n+                </Label>\n+                <Input\n+                  id=\"password\"\n+                  type=\"password\"\n+                  placeholder=\"Enter your password\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.password}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n+              {errors.apellido && <p className=\"text-red-500 text-sm\">{errors.apellido}</p>}\n+              {errors.dni && <p className=\"text-red-500 text-sm\">{errors.dni}</p>}\n+              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n+            </CardContent>\n+            <CardFooter className=\"bg-muted p-6\">\n+              <Button\n+                type=\"submit\"\n+                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors rounded-lg\"\n+              >\n+                Register as Donor\n+              </Button>\n+            </CardFooter>\n+          </Card>\n+        )}\n+\n+        {selectedOption === \"charity\" && (\n+          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n+            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n+              <CardTitle className=\"text-2xl font-bold\">Charity Organization Registration</CardTitle>\n+              <CardDescription className=\"text-sm\">Create your charity organization account</CardDescription>\n+            </CardHeader>\n+            <CardContent className=\"space-y-4 p-6\">\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n+                  Name\n+                </Label>\n+                <Input\n+                  id=\"nombre\"\n+                  placeholder=\"Enter your organization's name\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.nombre}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"descripcion\" className=\"text-sm font-medium\">\n+                  Description\n+                </Label>\n+                <Textarea\n+                  id=\"descripcion\"\n+                  placeholder=\"Enter your organization's description\"\n+                  className=\"text-left border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.descripcion}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n+                  Email\n+                </Label>\n+                <Input\n+                  id=\"email\"\n+                  type=\"email\"\n+                  placeholder=\"Enter your organization's email\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.email}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"direccion\" className=\"text-sm font-medium\">\n+                  Address\n+                </Label>\n+                <Input\n+                  id=\"direccion\"\n+                  placeholder=\"Enter your organization's address\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.direccion}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"telefono\" className=\"text-sm font-medium\">\n+                  Phone\n+                </Label>\n+                <Input\n+                  id=\"telefono\"\n+                  placeholder=\"Enter your organization's phone number\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.telefono}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n+                  Password\n+                </Label>\n+                <Input\n+                  id=\"password\"\n+                  type=\"password\"\n+                  placeholder=\"Enter your organization's password\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.password}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n+              {errors.direccion && <p className=\"text-red-500 text-sm\">{errors.direccion}</p>}\n+              {errors.telefono && <p className=\"text-red-500 text-sm\">{errors.telefono}</p>}\n+              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n+              {errors.descripcion && <p className=\"text-red-500 text-sm\">{errors.descripcion}</p>}\n+            </CardContent>\n+            <CardFooter className=\"bg-muted p-6\">\n+              <Button\n+                type=\"submit\"\n+                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\n+              >\n+                Register as Charity Organization\n+              </Button>\n+            </CardFooter>\n+          </Card>\n+        )}\n+      </form>\n+    </div>\n+  );\n+}\n"
                },
                {
                    "date": 1732172753519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,327 @@\n+\"use client\";\n+\n+import { useState } from \"react\";\n+import { RadioGroup } from \"@/components/ui/radio-group\";\n+import { Button } from \"@/components/ui/button\";\n+import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"@/components/ui/card\";\n+import { Label } from \"@/components/ui/label\";\n+import { Input } from \"@/components/ui/input\";\n+import { Textarea } from \"@/components/ui/textarea\";\n+import { useRouter } from 'next/navigation';\n+\n+export default function Register() {\n+  const router = useRouter();\n+  const [selectedOption, setSelectedOption] = useState(\"donor\");\n+  const [errors, setErrors] = useState({});\n+\n+  const [donorData, setDonorData] = useState({\n+    email: \"\",\n+    password: \"\",\n+    dni: \"\",\n+    apellido: \"\",\n+    nombre: \"\",\n+    userType: \"donor\"\n+  });\n+\n+  const [charityData, setCharityData] = useState({\n+    email: \"\",\n+    password: \"\",\n+    direccion: \"\",\n+    telefono: \"\",\n+    nombre: \"\",\n+    descripcion: \"\",\n+    userType: \"charity\"\n+  });\n+\n+  const handleChange = (e, setData) => {\n+    const { id, value } = e.target;\n+    if (id === 'dni' || id === 'telefono') {\n+      if (!/^\\d*$/.test(value)) return;\n+    }\n+    if ((id === 'nombre' || id === 'apellido') && selectedOption === 'donor') {\n+      if (!/^[a-zA-Z]*$/.test(value)) return; \n+    }\n+    if (id === 'nombre' && selectedOption === 'charity') {\n+      if (!/^[a-zA-Z\\s]*$/.test(value)) return; \n+    }\n+    if (id === 'dni' && value.length > 8) return; \n+    if (id === 'telefono' && value.length > 9) return; \n+    setData(prevState => ({ ...prevState, [id]: value }));\n+  };\n+\n+  const validateEmail = (email) => {\n+    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n+    return re.test(String(email).toLowerCase());\n+  };\n+\n+  const validateDonorData = () => {\n+    const newErrors = {};\n+    if (donorData.nombre.length > 10) newErrors.nombre = \"El nombre no debe tener más de 10 caracteres\";\n+    if (donorData.apellido.length > 20) newErrors.apellido = \"El apellido no debe tener más de 20 caracteres\";\n+    if (!validateEmail(donorData.email)) newErrors.email = \"El email no es válido\";\n+    if (donorData.dni.length !== 8) newErrors.dni = \"El DNI debe tener 8 dígitos\";\n+    return newErrors;\n+  };\n+\n+  const validateCharityData = () => {\n+    const newErrors = {};\n+    if (charityData.nombre.length > 30) newErrors.nombre = \"El nombre no debe tener más de 20 caracteres\";\n+    if (charityData.direccion.length > 30) newErrors.direccion = \"La dirección no debe tener más de 30 caracteres\";\n+    if (!validateEmail(charityData.email)) newErrors.email = \"El email no es válido\";\n+    if (charityData.telefono.length !== 9) newErrors.telefono = \"El teléfono debe tener 9 dígitos\";\n+    if (charityData.descripcion.length > 300) newErrors.descripcion = \"La descripción no debe tener más de 100 caracteres\";\n+    return newErrors;\n+  };\n+\n+  const onSubmit = async (e) => {\n+    e.preventDefault();\n+    let newErrors = selectedOption === \"donor\" ? validateDonorData() : validateCharityData();\n+    if (Object.keys(newErrors).length > 0) {\n+      setErrors(newErrors);\n+      return;\n+    }\n+    setErrors({});\n+    try {\n+      const url = 'http://localhost:3001/signup';\n+      const data = selectedOption === \"donor\" ? { ...donorData, type: 'donor' } : { ...charityData, type: 'charity' };\n+\n+      const res = await fetch(url, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json'\n+        },\n+        body: JSON.stringify(data)\n+      });\n+\n+      if (res.ok) {\n+        // Manejar la respuesta exitosa\n+        router.push('/logind');\n+      } else {\n+        // Manejar errores\n+        console.error('Error en el registro');\n+      }\n+    } catch (error) {\n+      console.error('Error en el registro:', error);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"flex flex-col items-center justify-center mt-10\">\n+      <div className=\"flex justify-center items-center mb-8\">\n+        <RadioGroup value={selectedOption} onValueChange={setSelectedOption} className=\"flex gap-4\">\n+          <Button\n+            id=\"donor\"\n+            value=\"donor\"\n+            className={`rounded-lg px-6 py-2 transition-colors ${\n+              selectedOption === \"donor\"\n+                ? \"bg-primary text-primary-foreground\"\n+                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n+            }`}\n+            onClick={() => setSelectedOption(\"donor\")}\n+          >\n+            Donor\n+          </Button>\n+          <Button\n+            id=\"charity\"\n+            value=\"charity\"\n+            className={`px-6 py-2 transition-colors rounded-lg ${\n+              selectedOption === \"charity\"\n+                ? \"bg-primary text-primary-foreground\"\n+                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n+            }`}\n+            onClick={() => setSelectedOption(\"charity\")}\n+          >\n+            Charity Organization\n+          </Button>\n+        </RadioGroup>\n+      </div>\n+\n+      <form onSubmit={onSubmit}>\n+        {selectedOption === \"donor\" && (\n+          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n+            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n+              <CardTitle className=\"text-2xl font-bold\">Donor Registration</CardTitle>\n+              <CardDescription className=\"text-sm\">Create your donor account</CardDescription>\n+            </CardHeader>\n+            <CardContent className=\"space-y-4 p-6\">\n+              <div className=\"grid grid-cols-2 gap-4\">\n+                <div className=\"space-y-2\">\n+                  <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n+                    First Name\n+                  </Label>\n+                  <Input\n+                    id=\"nombre\"\n+                    placeholder=\"Enter your first name\"\n+                    className=\"border-muted focus:border-primary focus:ring-primary\"\n+                    value={donorData.nombre}\n+                    onChange={(e) => handleChange(e, setDonorData)}\n+                  />\n+                </div>\n+                <div className=\"space-y-2\">\n+                  <Label htmlFor=\"apellido\" className=\"text-sm font-medium\">\n+                    Last Name\n+                  </Label>\n+                  <Input\n+                    id=\"apellido\"\n+                    placeholder=\"Enter your last name\"\n+                    className=\"border-muted focus:border-primary focus:ring-primary\"\n+                    value={donorData.apellido}\n+                    onChange={(e) => handleChange(e, setDonorData)}\n+                  />\n+                </div>\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"dni\" className=\"text-sm font-medium\">\n+                  DNI\n+                </Label>\n+                <Input\n+                  id=\"dni\"\n+                  placeholder=\"Enter your DNI\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.dni}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n+                  Email\n+                </Label>\n+                <Input\n+                  id=\"email\"\n+                  type=\"email\"\n+                  placeholder=\"Enter your email\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.email}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n+                  Password\n+                </Label>\n+                <Input\n+                  id=\"password\"\n+                  type=\"password\"\n+                  placeholder=\"Enter your password\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={donorData.password}\n+                  onChange={(e) => handleChange(e, setDonorData)}\n+                />\n+              </div>\n+              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n+              {errors.apellido && <p className=\"text-red-500 text-sm\">{errors.apellido}</p>}\n+              {errors.dni && <p className=\"text-red-500 text-sm\">{errors.dni}</p>}\n+              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n+            </CardContent>\n+            <CardFooter className=\"bg-muted p-6\">\n+              <Button\n+                type=\"submit\"\n+                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors rounded-lg\"\n+              >\n+                Register as Donor\n+              </Button>\n+            </CardFooter>\n+          </Card>\n+        )}\n+\n+        {selectedOption === \"charity\" && (\n+          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n+            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n+              <CardTitle className=\"text-2xl font-bold\">Charity Organization Registration</CardTitle>\n+              <CardDescription className=\"text-sm\">Create your charity organization account</CardDescription>\n+            </CardHeader>\n+            <CardContent className=\"space-y-4 p-6\">\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n+                  Name\n+                </Label>\n+                <Input\n+                  id=\"nombre\"\n+                  placeholder=\"Enter your organization's name\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.nombre}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"descripcion\" className=\"text-sm font-medium\">\n+                  Description\n+                </Label>\n+                <Textarea\n+                  id=\"descripcion\"\n+                  placeholder=\"Enter your organization's description\"\n+                  className=\"text-left border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.descripcion}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n+                  Email\n+                </Label>\n+                <Input\n+                  id=\"email\"\n+                  type=\"email\"\n+                  placeholder=\"Enter your organization's email\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.email}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"direccion\" className=\"text-sm font-medium\">\n+                  Address\n+                </Label>\n+                <Input\n+                  id=\"direccion\"\n+                  placeholder=\"Enter your organization's address\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.direccion}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"telefono\" className=\"text-sm font-medium\">\n+                  Phone\n+                </Label>\n+                <Input\n+                  id=\"telefono\"\n+                  placeholder=\"Enter your organization's phone number\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.telefono}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              <div className=\"space-y-2\">\n+                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n+                  Password\n+                </Label>\n+                <Input\n+                  id=\"password\"\n+                  type=\"password\"\n+                  placeholder=\"Enter your organization's password\"\n+                  className=\"border-muted focus:border-primary focus:ring-primary\"\n+                  value={charityData.password}\n+                  onChange={(e) => handleChange(e, setCharityData)}\n+                />\n+              </div>\n+              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n+              {errors.direccion && <p className=\"text-red-500 text-sm\">{errors.direccion}</p>}\n+              {errors.telefono && <p className=\"text-red-500 text-sm\">{errors.telefono}</p>}\n+              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n+              {errors.descripcion && <p className=\"text-red-500 text-sm\">{errors.descripcion}</p>}\n+            </CardContent>\n+            <CardFooter className=\"bg-muted p-6\">\n+              <Button\n+                type=\"submit\"\n+                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\n+              >\n+                Register as Charity Organization\n+              </Button>\n+            </CardFooter>\n+          </Card>\n+        )}\n+      </form>\n+    </div>\n+  );\n+}\n"
                }
            ],
            "date": 1732066568994,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { RadioGroup } from \"@/components/ui/radio-group\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useRouter } from 'next/navigation';\n\nexport default function Register() {\n  const router = useRouter();\n  const [selectedOption, setSelectedOption] = useState(\"donor\");\n  const [errors, setErrors] = useState({});\n\n  const [donorData, setDonorData] = useState({\n    email: \"\",\n    password: \"\",\n    dni: \"\",\n    apellido: \"\",\n    nombre: \"\",\n    userType: \"donor\"\n  });\n\n  const [charityData, setCharityData] = useState({\n    email: \"\",\n    password: \"\",\n    direccion: \"\",\n    telefono: \"\",\n    nombre: \"\",\n    descripcion: \"\",\n    userType: \"charity\"\n  });\n\n  const handleChange = (e, setData) => {\n    const { id, value } = e.target;\n    if (id === 'dni' || id === 'telefono') {\n      if (!/^\\d*$/.test(value)) return;\n    }\n    if ((id === 'nombre' || id === 'apellido') && selectedOption === 'donor') {\n      if (!/^[a-zA-Z]*$/.test(value)) return; \n    }\n    if (id === 'nombre' && selectedOption === 'charity') {\n      if (!/^[a-zA-Z\\s]*$/.test(value)) return; \n    }\n    if (id === 'dni' && value.length > 8) return; \n    if (id === 'telefono' && value.length > 9) return; \n    setData(prevState => ({ ...prevState, [id]: value }));\n  };\n\n  const validateEmail = (email) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const validateDonorData = () => {\n    const newErrors = {};\n    if (donorData.nombre.length > 10) newErrors.nombre = \"El nombre no debe tener más de 10 caracteres\";\n    if (donorData.apellido.length > 20) newErrors.apellido = \"El apellido no debe tener más de 20 caracteres\";\n    if (!validateEmail(donorData.email)) newErrors.email = \"El email no es válido\";\n    if (donorData.dni.length !== 8) newErrors.dni = \"El DNI debe tener 8 dígitos\";\n    return newErrors;\n  };\n\n  const validateCharityData = () => {\n    const newErrors = {};\n    if (charityData.nombre.length > 30) newErrors.nombre = \"El nombre no debe tener más de 20 caracteres\";\n    if (charityData.direccion.length > 30) newErrors.direccion = \"La dirección no debe tener más de 30 caracteres\";\n    if (!validateEmail(charityData.email)) newErrors.email = \"El email no es válido\";\n    if (charityData.telefono.length !== 9) newErrors.telefono = \"El teléfono debe tener 9 dígitos\";\n    if (charityData.descripcion.length > 100) newErrors.descripcion = \"La descripción no debe tener más de 100 caracteres\";\n    return newErrors;\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let newErrors = selectedOption === \"donor\" ? validateDonorData() : validateCharityData();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setErrors({});\n    try {\n      const url = 'https://rwggxws5-3001.brs.devtunnels.ms/signup';\n      const data = selectedOption === \"donor\" ? { ...donorData, type: 'donor' } : { ...charityData, type: 'charity' };\n\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (res.ok) {\n        // Manejar la respuesta exitosa\n        router.push('/logind');\n      } else {\n        // Manejar errores\n        console.error('Error en el registro');\n      }\n    } catch (error) {\n      console.error('Error en el registro:', error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center mt-10\">\n      <div className=\"flex justify-center items-center mb-8\">\n        <RadioGroup value={selectedOption} onValueChange={setSelectedOption} className=\"flex gap-4\">\n          <Button\n            id=\"donor\"\n            value=\"donor\"\n            className={`rounded-lg px-6 py-2 transition-colors ${\n              selectedOption === \"donor\"\n                ? \"bg-primary text-primary-foreground\"\n                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n            }`}\n            onClick={() => setSelectedOption(\"donor\")}\n          >\n            Donor\n          </Button>\n          <Button\n            id=\"charity\"\n            value=\"charity\"\n            className={`px-6 py-2 transition-colors rounded-lg ${\n              selectedOption === \"charity\"\n                ? \"bg-primary text-primary-foreground\"\n                : \"bg-muted text-muted-foreground hover:bg-muted/80\"\n            }`}\n            onClick={() => setSelectedOption(\"charity\")}\n          >\n            Charity Organization\n          </Button>\n        </RadioGroup>\n      </div>\n\n      <form onSubmit={onSubmit}>\n        {selectedOption === \"donor\" && (\n          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n              <CardTitle className=\"text-2xl font-bold\">Donor Registration</CardTitle>\n              <CardDescription className=\"text-sm\">Create your donor account</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4 p-6\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n                    First Name\n                  </Label>\n                  <Input\n                    id=\"nombre\"\n                    placeholder=\"Enter your first name\"\n                    className=\"border-muted focus:border-primary focus:ring-primary\"\n                    value={donorData.nombre}\n                    onChange={(e) => handleChange(e, setDonorData)}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"apellido\" className=\"text-sm font-medium\">\n                    Last Name\n                  </Label>\n                  <Input\n                    id=\"apellido\"\n                    placeholder=\"Enter your last name\"\n                    className=\"border-muted focus:border-primary focus:ring-primary\"\n                    value={donorData.apellido}\n                    onChange={(e) => handleChange(e, setDonorData)}\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dni\" className=\"text-sm font-medium\">\n                  DNI\n                </Label>\n                <Input\n                  id=\"dni\"\n                  placeholder=\"Enter your DNI\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={donorData.dni}\n                  onChange={(e) => handleChange(e, setDonorData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                  Email\n                </Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={donorData.email}\n                  onChange={(e) => handleChange(e, setDonorData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                  Password\n                </Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={donorData.password}\n                  onChange={(e) => handleChange(e, setDonorData)}\n                />\n              </div>\n              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n              {errors.apellido && <p className=\"text-red-500 text-sm\">{errors.apellido}</p>}\n              {errors.dni && <p className=\"text-red-500 text-sm\">{errors.dni}</p>}\n              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n            </CardContent>\n            <CardFooter className=\"bg-muted p-6\">\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors rounded-lg\"\n              >\n                Register as Donor\n              </Button>\n            </CardFooter>\n          </Card>\n        )}\n\n        {selectedOption === \"charity\" && (\n          <Card className=\"bg-background border shadow-lg w-full max-w-md\">\n            <CardHeader className=\"bg-primary text-primary-foreground p-6\">\n              <CardTitle className=\"text-2xl font-bold\">Charity Organization Registration</CardTitle>\n              <CardDescription className=\"text-sm\">Create your charity organization account</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4 p-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\n                  Name\n                </Label>\n                <Input\n                  id=\"nombre\"\n                  placeholder=\"Enter your organization's name\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.nombre}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"descripcion\" className=\"text-sm font-medium\">\n                  Description\n                </Label>\n                <Textarea\n                  id=\"descripcion\"\n                  placeholder=\"Enter your organization's description\"\n                  className=\"text-left border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.descripcion}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                  Email\n                </Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your organization's email\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.email}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"direccion\" className=\"text-sm font-medium\">\n                  Address\n                </Label>\n                <Input\n                  id=\"direccion\"\n                  placeholder=\"Enter your organization's address\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.direccion}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"telefono\" className=\"text-sm font-medium\">\n                  Phone\n                </Label>\n                <Input\n                  id=\"telefono\"\n                  placeholder=\"Enter your organization's phone number\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.telefono}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                  Password\n                </Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your organization's password\"\n                  className=\"border-muted focus:border-primary focus:ring-primary\"\n                  value={charityData.password}\n                  onChange={(e) => handleChange(e, setCharityData)}\n                />\n              </div>\n              {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\n              {errors.direccion && <p className=\"text-red-500 text-sm\">{errors.direccion}</p>}\n              {errors.telefono && <p className=\"text-red-500 text-sm\">{errors.telefono}</p>}\n              {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\n              {errors.descripcion && <p className=\"text-red-500 text-sm\">{errors.descripcion}</p>}\n            </CardContent>\n            <CardFooter className=\"bg-muted p-6\">\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\n              >\n                Register as Charity Organization\n              </Button>\n            </CardFooter>\n          </Card>\n        )}\n      </form>\n    </div>\n  );\n}\n"
        }
    ]
}