{
    "sourceFile": "src/components/component/UpdateCharity.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1732066587613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732154316571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             return;\r\n         }\r\n         setErrors({});\r\n         try {\r\n-            const res = await fetch(`https://rwggxws5-3001.brs.devtunnels.ms/${charityData.id}/update`, {\r\n+            const res = await fetch(`http://localhost:3001/${charityData.id}/update`, {\r\n                 method: 'POST',\r\n                 headers: {\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n"
                },
                {
                    "date": 1732171152665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,179 @@\n+\"use client\";\r\n+\r\n+import { useState } from \"react\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"@/components/ui/card\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Textarea } from \"@/components/ui/textarea\";\r\n+import { useRouter } from 'next/navigation';\r\n+\r\n+export default function UpdateCharity({ charityData, onUpdateSuccess, onCancel }) {\r\n+    const router = useRouter();\r\n+    const [formData, setFormData] = useState({\r\n+        email: charityData.email || \"\",\r\n+        direccion: charityData.direccion || \"\",\r\n+        telefono: charityData.telefono || \"\",\r\n+        nombre: charityData.nombre || \"\",\r\n+        descripcion: charityData.descripcion || \"\",\r\n+    });\r\n+    const [errors, setErrors] = useState({});\r\n+\r\n+    const handleChange = (e) => {\r\n+        const { id, value } = e.target;\r\n+        if (id === 'telefono') {\r\n+            if (!/^\\d*$/.test(value)) return;\r\n+        }\r\n+        if (id === 'nombre') {\r\n+            if (!/^[a-zA-Z\\s]*$/.test(value)) return;\r\n+        }\r\n+        if (id === 'telefono' && value.length > 9) return;\r\n+        setFormData(prevState => ({ ...prevState, [id]: value }));\r\n+    };\r\n+\r\n+    const validateEmail = (email) => {\r\n+        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+        return re.test(String(email).toLowerCase());\r\n+    };\r\n+\r\n+    const validateCharityData = () => {\r\n+        const newErrors = {};\r\n+        if (formData.nombre.length > 30) newErrors.nombre = \"El nombre no debe tener más de 20 caracteres\";\r\n+        if (formData.direccion.length > 30) newErrors.direccion = \"La dirección no debe tener más de 30 caracteres\";\r\n+        if (!validateEmail(formData.email)) newErrors.email = \"El email no es válido\";\r\n+        if (formData.telefono.length !== 9) newErrors.telefono = \"El teléfono debe tener 9 dígitos\";\r\n+        if (formData.descripcion.length > 100) newErrors.descripcion = \"La descripción no debe tener más de 100 caracteres\";\r\n+        return newErrors;\r\n+    };\r\n+\r\n+    const onSubmit = async (e) => {\r\n+        e.preventDefault();\r\n+        let newErrors = validateCharityData();\r\n+        if (Object.keys(newErrors).length > 0) {\r\n+            setErrors(newErrors);\r\n+            return;\r\n+        }\r\n+        setErrors({});\r\n+        try {\r\n+            const res = await fetch(`http://localhost:3001/${charityData.id}/update`, {\r\n+                method: 'POST',\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                },\r\n+                body: JSON.stringify(formData)\r\n+            });\r\n+\r\n+            if (res.ok) {\r\n+                // Manejar la respuesta exitosa\r\n+                onUpdateSuccess();\r\n+                window\r\n+            } else {\r\n+                // Manejar errores\r\n+                console.error('Error updating charity');\r\n+            }\r\n+        } catch (error) {\r\n+            console.error('Error updating charity:', error);\r\n+        }\r\n+    };\r\n+\r\n+    const handleCancel = () => {\r\n+        onCancel();\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"flex flex-col items-center justify-center mt-10\">\r\n+            <form onSubmit={onSubmit}>\r\n+                <Card className=\"bg-background border shadow-lg w-full max-w-md\">\r\n+                    <CardHeader className=\"bg-primary text-primary-foreground p-6\">\r\n+                        <CardTitle className=\"text-2xl font-bold\">Update Charity Organization</CardTitle>\r\n+                        <CardDescription className=\"text-sm\">Update your charity organization account</CardDescription>\r\n+                    </CardHeader>\r\n+                    <CardContent className=\"space-y-4 p-6\">\r\n+                        <div className=\"space-y-2\">\r\n+                            <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\r\n+                                Name\r\n+                            </Label>\r\n+                            <Input\r\n+                                id=\"nombre\"\r\n+                                placeholder=\"Enter your organization's name\"\r\n+                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n+                                value={formData.nombre}\r\n+                                onChange={handleChange}\r\n+                            />\r\n+                        </div>\r\n+                        <div className=\"space-y-2\">\r\n+                            <Label htmlFor=\"descripcion\" className=\"text-sm font-medium\">\r\n+                                Description\r\n+                            </Label>\r\n+                            <Textarea\r\n+                                id=\"descripcion\"\r\n+                                placeholder=\"Enter your organization's description\"\r\n+                                className=\"text-left border-muted focus:border-primary focus:ring-primary\"\r\n+                                value={formData.descripcion}\r\n+                                onChange={handleChange}\r\n+                            />\r\n+                        </div>\r\n+                        <div className=\"space-y-2\">\r\n+                            <Label htmlFor=\"email\" className=\"text-sm font-medium\">\r\n+                                Email\r\n+                            </Label>\r\n+                            <Input\r\n+                                id=\"email\"\r\n+                                type=\"email\"\r\n+                                placeholder=\"Enter your organization's email\"\r\n+                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n+                                value={formData.email}\r\n+                                onChange={handleChange}\r\n+                            />\r\n+                        </div>\r\n+                        <div className=\"space-y-2\">\r\n+                            <Label htmlFor=\"direccion\" className=\"text-sm font-medium\">\r\n+                                Address\r\n+                            </Label>\r\n+                            <Input\r\n+                                id=\"direccion\"\r\n+                                placeholder=\"Enter your organization's address\"\r\n+                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n+                                value={formData.direccion}\r\n+                                onChange={handleChange}\r\n+                            />\r\n+                        </div>\r\n+                        <div className=\"space-y-2\">\r\n+                            <Label htmlFor=\"telefono\" className=\"text-sm font-medium\">\r\n+                                Phone\r\n+                            </Label>\r\n+                            <Input\r\n+                                id=\"telefono\"\r\n+                                placeholder=\"Enter your organization's phone number\"\r\n+                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n+                                value={formData.telefono}\r\n+                                onChange={handleChange}\r\n+                            />\r\n+                        </div>\r\n+\r\n+                        {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\r\n+                        {errors.direccion && <p className=\"text-red-500 text-sm\">{errors.direccion}</p>}\r\n+                        {errors.telefono && <p className=\"text-red-500 text-sm\">{errors.telefono}</p>}\r\n+                        {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n+                        {errors.descripcion && <p className=\"text-red-500 text-sm\">{errors.descripcion}</p>}\r\n+                    </CardContent>\r\n+                    <CardFooter className=\"bg-muted p-6 flex justify-between\">\r\n+                        <Button\r\n+                            type=\"submit\"\r\n+                            className=\"bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\r\n+                        >\r\n+                            Update Charity Organization\r\n+                        </Button>\r\n+                        <Button\r\n+                            type=\"button\"\r\n+                            className=\"bg-secondary text-secondary-foreground hover:bg-secondary/90 transition-colors\"\r\n+                            onClick={handleCancel}\r\n+                        >\r\n+                            Cancel\r\n+                        </Button>\r\n+                    </CardFooter>\r\n+                </Card>\r\n+            </form>\r\n+        </div>\r\n+    );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1732066587613,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from \"@/components/ui/card\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function UpdateCharity({ charityData, onUpdateSuccess, onCancel }) {\r\n    const router = useRouter();\r\n    const [formData, setFormData] = useState({\r\n        email: charityData.email || \"\",\r\n        direccion: charityData.direccion || \"\",\r\n        telefono: charityData.telefono || \"\",\r\n        nombre: charityData.nombre || \"\",\r\n        descripcion: charityData.descripcion || \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        if (id === 'telefono') {\r\n            if (!/^\\d*$/.test(value)) return;\r\n        }\r\n        if (id === 'nombre') {\r\n            if (!/^[a-zA-Z\\s]*$/.test(value)) return;\r\n        }\r\n        if (id === 'telefono' && value.length > 9) return;\r\n        setFormData(prevState => ({ ...prevState, [id]: value }));\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return re.test(String(email).toLowerCase());\r\n    };\r\n\r\n    const validateCharityData = () => {\r\n        const newErrors = {};\r\n        if (formData.nombre.length > 30) newErrors.nombre = \"El nombre no debe tener más de 20 caracteres\";\r\n        if (formData.direccion.length > 30) newErrors.direccion = \"La dirección no debe tener más de 30 caracteres\";\r\n        if (!validateEmail(formData.email)) newErrors.email = \"El email no es válido\";\r\n        if (formData.telefono.length !== 9) newErrors.telefono = \"El teléfono debe tener 9 dígitos\";\r\n        if (formData.descripcion.length > 100) newErrors.descripcion = \"La descripción no debe tener más de 100 caracteres\";\r\n        return newErrors;\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let newErrors = validateCharityData();\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n        setErrors({});\r\n        try {\r\n            const res = await fetch(`https://rwggxws5-3001.brs.devtunnels.ms/${charityData.id}/update`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            if (res.ok) {\r\n                // Manejar la respuesta exitosa\r\n                onUpdateSuccess();\r\n                router.push('/profile');\r\n            } else {\r\n                // Manejar errores\r\n                console.error('Error updating charity');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating charity:', error);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center mt-10\">\r\n            <form onSubmit={onSubmit}>\r\n                <Card className=\"bg-background border shadow-lg w-full max-w-md\">\r\n                    <CardHeader className=\"bg-primary text-primary-foreground p-6\">\r\n                        <CardTitle className=\"text-2xl font-bold\">Update Charity Organization</CardTitle>\r\n                        <CardDescription className=\"text-sm\">Update your charity organization account</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4 p-6\">\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"nombre\" className=\"text-sm font-medium\">\r\n                                Name\r\n                            </Label>\r\n                            <Input\r\n                                id=\"nombre\"\r\n                                placeholder=\"Enter your organization's name\"\r\n                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n                                value={formData.nombre}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"descripcion\" className=\"text-sm font-medium\">\r\n                                Description\r\n                            </Label>\r\n                            <Textarea\r\n                                id=\"descripcion\"\r\n                                placeholder=\"Enter your organization's description\"\r\n                                className=\"text-left border-muted focus:border-primary focus:ring-primary\"\r\n                                value={formData.descripcion}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"email\" className=\"text-sm font-medium\">\r\n                                Email\r\n                            </Label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your organization's email\"\r\n                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"direccion\" className=\"text-sm font-medium\">\r\n                                Address\r\n                            </Label>\r\n                            <Input\r\n                                id=\"direccion\"\r\n                                placeholder=\"Enter your organization's address\"\r\n                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n                                value={formData.direccion}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"telefono\" className=\"text-sm font-medium\">\r\n                                Phone\r\n                            </Label>\r\n                            <Input\r\n                                id=\"telefono\"\r\n                                placeholder=\"Enter your organization's phone number\"\r\n                                className=\"border-muted focus:border-primary focus:ring-primary\"\r\n                                value={formData.telefono}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        {errors.nombre && <p className=\"text-red-500 text-sm\">{errors.nombre}</p>}\r\n                        {errors.direccion && <p className=\"text-red-500 text-sm\">{errors.direccion}</p>}\r\n                        {errors.telefono && <p className=\"text-red-500 text-sm\">{errors.telefono}</p>}\r\n                        {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n                        {errors.descripcion && <p className=\"text-red-500 text-sm\">{errors.descripcion}</p>}\r\n                    </CardContent>\r\n                    <CardFooter className=\"bg-muted p-6 flex justify-between\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            className=\"bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\r\n                        >\r\n                            Update Charity Organization\r\n                        </Button>\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"bg-secondary text-secondary-foreground hover:bg-secondary/90 transition-colors\"\r\n                            onClick={handleCancel}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </CardFooter>\r\n                </Card>\r\n            </form>\r\n        </div>\r\n    );\r\n}"
        }
    ]
}