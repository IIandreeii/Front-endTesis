{
    "sourceFile": "src/components/component/donationsform.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1731367689384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1731367689384,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nexport default function DonationForm({ charity, onCancel, user }) {\r\n  const [name, setName] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user && user.nombre) {\r\n      setName(user.nombre);\r\n      \r\n    }\r\n  }, [user]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const donationData = {\r\n      amount: parseFloat(amount),\r\n      donorName: name\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(` https://helped-suitable-elk.ngrok-free.app /mercadopago/donate/${charity._id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(donationData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error en la donación: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      const initPointUrl = result.init_point;\r\n      if (initPointUrl && initPointUrl.startsWith('https://www.mercadopago.com.pe/checkout/v1/redirect')) {\r\n        window.open(initPointUrl, '_blank');\r\n      } else {\r\n        alert('No se pudo obtener la URL de pago válida. Por favor, inténtalo de nuevo.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en la donación:', error);\r\n      alert('Hubo un error al realizar la donación. Por favor, inténtalo de nuevo.');\r\n    }\r\n\r\n    onCancel(); // Llama a la función onCancel para cerrar el formulario\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center mt-10\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Donar a {charity.nombre}</h2>\r\n      <form onSubmit={handleSubmit} className=\"w-full max-w-md bg-white p-6 rounded-lg shadow-md\">\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\r\n            Nombre completo del donante\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"amount\">\r\n            Cantidad (S/.)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <Button type=\"submit\" className=\"bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\">\r\n            Donar\r\n          </Button>\r\n          <Button type=\"button\" className=\"bg-secondary text-secondary-foreground hover:bg-secondary/90 transition-colors\" onClick={onCancel}>\r\n            Cancelar\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"
        }
    ]
}