{
    "sourceFile": "src/components/component/PostComponent.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1731024358198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731024594800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const PostComponent = ({ organizationId, userId }) => {\r\n+    const [content, setContent] = useState('');\r\n+    const [posts, setPosts] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchPosts = async () => {\r\n+            const response = await axios.get('http://localhost:3000/posts');\r\n+            setPosts(response.data);\r\n+        };\r\n+\r\n+        fetchPosts();\r\n+    }, []);\r\n+\r\n+    const createPost = async () => {\r\n+        const response = await axios.post('http://localhost:3000/posts', {\r\n+            content,\r\n+            organization: organizationId,\r\n+        });\r\n+        setPosts((prevPosts) => [...prevPosts, response.data]);\r\n+        setContent('');\r\n+    };\r\n+\r\n+    const likePost = async (postId) => {\r\n+        const response = await axios.post(`http://localhost:3000/posts/${postId}/like`, {\r\n+            userId,\r\n+        });\r\n+        setPosts((prevPosts) =>\r\n+            prevPosts.map((post) =>\r\n+                post._id === postId ? { ...post, likes: response.data.likes } : post\r\n+            )\r\n+        );\r\n+    };\r\n+\r\n+    return (\r\n+        <div>\r\n+            <div>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    value={content}\r\n+                    onChange={(e) => setContent(e.target.value)}\r\n+                />\r\n+                <button onClick={createPost}>Publicar</button>\r\n+            </div>\r\n+            <div>\r\n+                {posts.map((post) => (\r\n+                    <div key={post._id}>\r\n+                        <p>{post.content}</p>\r\n+                        <button onClick={() => likePost(post._id)}>\r\n+                            Like ({post.likes.length})\r\n+                        </button>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PostComponent;\r\n"
                },
                {
                    "date": 1731024743376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,26 +6,26 @@\n     const [posts, setPosts] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const fetchPosts = async () => {\r\n-            const response = await axios.get('http://localhost:3000/posts');\r\n+            const response = await axios.get('http://localhost:3002/posts');\r\n             setPosts(response.data);\r\n         };\r\n \r\n         fetchPosts();\r\n     }, []);\r\n \r\n     const createPost = async () => {\r\n-        const response = await axios.post('http://localhost:3000/posts', {\r\n+        const response = await axios.post('http://localhost:3002/posts', {\r\n             content,\r\n             organization: organizationId,\r\n         });\r\n         setPosts((prevPosts) => [...prevPosts, response.data]);\r\n         setContent('');\r\n     };\r\n \r\n     const likePost = async (postId) => {\r\n-        const response = await axios.post(`http://localhost:3000/posts/${postId}/like`, {\r\n+        const response = await axios.post(`http://localhost:3002/posts/${postId}/like`, {\r\n             userId,\r\n         });\r\n         setPosts((prevPosts) =>\r\n             prevPosts.map((post) =>\r\n"
                },
                {
                    "date": 1731024940783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+\"use client\";\r\n+\r\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n \r\n const PostComponent = ({ organizationId, userId }) => {\r\n"
                },
                {
                    "date": 1731025246122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,33 +8,45 @@\n     const [posts, setPosts] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const fetchPosts = async () => {\r\n-            const response = await axios.get('http://localhost:3002/posts');\r\n-            setPosts(response.data);\r\n+            try {\r\n+                const response = await axios.get('http://localhost:3002/posts');\r\n+                setPosts(response.data);\r\n+            } catch (error) {\r\n+                console.error('Error fetching posts:', error);\r\n+            }\r\n         };\r\n \r\n         fetchPosts();\r\n     }, []);\r\n \r\n     const createPost = async () => {\r\n-        const response = await axios.post('http://localhost:3002/posts', {\r\n-            content,\r\n-            organization: organizationId,\r\n-        });\r\n-        setPosts((prevPosts) => [...prevPosts, response.data]);\r\n-        setContent('');\r\n+        try {\r\n+            const response = await axios.post('http://localhost:3002/posts', {\r\n+                content,\r\n+                organization: organizationId,\r\n+            });\r\n+            setPosts((prevPosts) => [...prevPosts, response.data]);\r\n+            setContent('');\r\n+        } catch (error) {\r\n+            console.error('Error creating post:', error);\r\n+        }\r\n     };\r\n \r\n     const likePost = async (postId) => {\r\n-        const response = await axios.post(`http://localhost:3002/posts/${postId}/like`, {\r\n-            userId,\r\n-        });\r\n-        setPosts((prevPosts) =>\r\n-            prevPosts.map((post) =>\r\n-                post._id === postId ? { ...post, likes: response.data.likes } : post\r\n-            )\r\n-        );\r\n+        try {\r\n+            const response = await axios.post(`http://localhost:3002/posts/${postId}/like`, {\r\n+                userId,\r\n+            });\r\n+            setPosts((prevPosts) =>\r\n+                prevPosts.map((post) =>\r\n+                    post._id === postId ? { ...post, likes: response.data.likes } : post\r\n+                )\r\n+            );\r\n+        } catch (error) {\r\n+            console.error('Error liking post:', error);\r\n+        }\r\n     };\r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1731025943987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     useEffect(() => {\r\n         const fetchPosts = async () => {\r\n             try {\r\n-                const response = await axios.get('http://localhost:3002/posts');\r\n+                const response = await axios.get('http://localhost:3001/posts');\r\n                 setPosts(response.data);\r\n             } catch (error) {\r\n                 console.error('Error fetching posts:', error);\r\n             }\r\n"
                },
                {
                    "date": 1731025949402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,75 @@\n+\"use client\";\r\n+\r\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+const PostComponent = ({ organizationId, userId }) => {\r\n+    const [content, setContent] = useState('');\r\n+    const [posts, setPosts] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchPosts = async () => {\r\n+            try {\r\n+                const response = await axios.get('http://localhost:3001/posts');\r\n+                setPosts(response.data);\r\n+            } catch (error) {\r\n+                console.error('Error fetching posts:', error);\r\n+            }\r\n+        };\r\n+\r\n+        fetchPosts();\r\n+    }, []);\r\n+\r\n+    const createPost = async () => {\r\n+        try {\r\n+            const response = await axios.post('http://localhost:3001/posts', {\r\n+                content,\r\n+                organization: organizationId,\r\n+            });\r\n+            setPosts((prevPosts) => [...prevPosts, response.data]);\r\n+            setContent('');\r\n+        } catch (error) {\r\n+            console.error('Error creating post:', error);\r\n+        }\r\n+    };\r\n+\r\n+    const likePost = async (postId) => {\r\n+        try {\r\n+            const response = await axios.post(`http://localhost:3001/posts/${postId}/like`, {\r\n+                userId,\r\n+            });\r\n+            setPosts((prevPosts) =>\r\n+                prevPosts.map((post) =>\r\n+                    post._id === postId ? { ...post, likes: response.data.likes } : post\r\n+                )\r\n+            );\r\n+        } catch (error) {\r\n+            console.error('Error liking post:', error);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div>\r\n+            <div>\r\n+                <input\r\n+                    type=\"text\"\r\n+                    value={content}\r\n+                    onChange={(e) => setContent(e.target.value)}\r\n+                />\r\n+                <button onClick={createPost}>Publicar</button>\r\n+            </div>\r\n+            <div>\r\n+                {posts.map((post) => (\r\n+                    <div key={post._id}>\r\n+                        <p>{post.content}</p>\r\n+                        <button onClick={() => likePost(post._id)}>\r\n+                            Like ({post.likes.length})\r\n+                        </button>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default PostComponent;\r\n"
                },
                {
                    "date": 1731026579033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,79 +72,4 @@\n     );\r\n };\r\n \r\n export default PostComponent;\r\n-\"use client\";\r\n-\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-const PostComponent = ({ organizationId, userId }) => {\r\n-    const [content, setContent] = useState('');\r\n-    const [posts, setPosts] = useState([]);\r\n-\r\n-    useEffect(() => {\r\n-        const fetchPosts = async () => {\r\n-            try {\r\n-                const response = await axios.get('http://localhost:3001/posts');\r\n-                setPosts(response.data);\r\n-            } catch (error) {\r\n-                console.error('Error fetching posts:', error);\r\n-            }\r\n-        };\r\n-\r\n-        fetchPosts();\r\n-    }, []);\r\n-\r\n-    const createPost = async () => {\r\n-        try {\r\n-            const response = await axios.post('http://localhost:3002/posts', {\r\n-                content,\r\n-                organization: organizationId,\r\n-            });\r\n-            setPosts((prevPosts) => [...prevPosts, response.data]);\r\n-            setContent('');\r\n-        } catch (error) {\r\n-            console.error('Error creating post:', error);\r\n-        }\r\n-    };\r\n-\r\n-    const likePost = async (postId) => {\r\n-        try {\r\n-            const response = await axios.post(`http://localhost:3002/posts/${postId}/like`, {\r\n-                userId,\r\n-            });\r\n-            setPosts((prevPosts) =>\r\n-                prevPosts.map((post) =>\r\n-                    post._id === postId ? { ...post, likes: response.data.likes } : post\r\n-                )\r\n-            );\r\n-        } catch (error) {\r\n-            console.error('Error liking post:', error);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div>\r\n-            <div>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    value={content}\r\n-                    onChange={(e) => setContent(e.target.value)}\r\n-                />\r\n-                <button onClick={createPost}>Publicar</button>\r\n-            </div>\r\n-            <div>\r\n-                {posts.map((post) => (\r\n-                    <div key={post._id}>\r\n-                        <p>{post.content}</p>\r\n-                        <button onClick={() => likePost(post._id)}>\r\n-                            Like ({post.likes.length})\r\n-                        </button>\r\n-                    </div>\r\n-                ))}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default PostComponent;\r\n"
                }
            ],
            "date": 1731024358198,
            "name": "Commit-0",
            "content": ""
        }
    ]
}