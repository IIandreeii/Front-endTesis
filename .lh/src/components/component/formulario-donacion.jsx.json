{
    "sourceFile": "src/components/component/formulario-donacion.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1731950867604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731951120598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\">\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951527860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const [donorName, setDonorName] = useState(\"\")\n+  const [itemType, setItemType] = useState(\"\")\n+  const [quantity, setQuantity] = useState(\"\")\n+  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault()\n+\n+    const token = localStorage.getItem('authToken')\n+    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n+\n+    const donationData = {\n+      charityId,\n+      donorName,\n+      itemType,\n+      quantity,\n+      unit: unidad,\n+      valuePerUnit\n+    }\n+\n+    try {\n+      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+        body: JSON.stringify(donationData)\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      alert(data.message)\n+    } catch (error) {\n+      console.error('Error al enviar la donación:', error)\n+      alert(`Error al enviar la donación: ${error.message}`)\n+    }\n+  }\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951676045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const [donorName, setDonorName] = useState(\"\")\n+  const [itemType, setItemType] = useState(\"\")\n+  const [quantity, setQuantity] = useState(\"\")\n+  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault()\n+\n+    const token = localStorage.getItem('authToken')\n+    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n+\n+    const donationData = {\n+      charityId,\n+      donorName,\n+      itemType,\n+      quantity,\n+      unit: unidad,\n+      valuePerUnit\n+    }\n+\n+    try {\n+      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+        body: JSON.stringify(donationData)\n+        console.log(donationData)\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      alert(data.message)\n+    } catch (error) {\n+      console.error('Error al enviar la donación:', error)\n+      alert(`Error al enviar la donación: ${error.message}`)\n+    }\n+  }\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951683151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const [donorName, setDonorName] = useState(\"\")\n+  const [itemType, setItemType] = useState(\"\")\n+  const [quantity, setQuantity] = useState(\"\")\n+  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault()\n+\n+    const token = localStorage.getItem('authToken')\n+    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n+\n+    const donationData = {\n+      charityId,\n+      donorName,\n+      itemType,\n+      quantity,\n+      unit: unidad,\n+      valuePerUnit\n+    }\n+\n+    try {\n+      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+        body: JSON.stringify(donationData)\n+        \n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      alert(data.message)\n+    } catch (error) {\n+      console.error('Error al enviar la donación:', error)\n+      alert(`Error al enviar la donación: ${error.message}`)\n+    }\n+  }\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951841793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,595 +0,0 @@\n-'use client'\n-\n-import { useState, useEffect } from 'react'\n-import { useRouter } from 'next/navigation'\n-import { Button } from \"@/components/ui/button\"\n-import { Input } from \"@/components/ui/input\"\n-import { Label } from \"@/components/ui/label\"\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n-\n-export function FormularioDonacionComponent() {\n-  const [unidad, setUnidad] = useState(\"\")\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n-  const [isOrganization, setIsOrganization] = useState(false)\n-  const [donorName, setDonorName] = useState(\"\")\n-  const [itemType, setItemType] = useState(\"\")\n-  const [quantity, setQuantity] = useState(\"\")\n-  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n-  const router = useRouter()\n-\n-  const checkAuthentication = async () => {\n-    const token = localStorage.getItem('authToken')\n-    if (!token) {\n-      router.push('/logind')\n-      return\n-    }\n-\n-    try {\n-      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n-        method: 'GET',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      if (data.charity && data.charity.userType === 'charity') {\n-        setIsAuthenticated(true)\n-        setIsOrganization(true)\n-      } else {\n-        router.push('/logind')\n-      }\n-    } catch (error) {\n-      console.error('Error obteniendo el usuario:', error)\n-      router.push('/logind')\n-    }\n-  }\n-\n-  useEffect(() => {\n-    checkAuthentication()\n-  }, [])\n-\n-  const handleSubmit = async (e) => {\n-    e.preventDefault()\n-\n-    const token = localStorage.getItem('authToken')\n-    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n-\n-    const donationData = {\n-      charityId,\n-      donorName,\n-      itemType,\n-      quantity,\n-      unit: unidad,\n-      valuePerUnit\n-    }\n-\n-    try {\n-      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-        body: JSON.stringify(donationData)\n-        \n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      alert(data.message)\n-    } catch (error) {\n-      console.error('Error al enviar la donación:', error)\n-      alert(`Error al enviar la donación: ${error.message}`)\n-    }\n-  }\n-\n-  if (!isAuthenticated || !isOrganization) {\n-    return <div>Cargando...</div>\n-  }\n-\n-  return (\n-    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n-      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n-        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n-        \n-        <div className=\"space-y-4\">\n-          <div>\n-            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n-            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n-            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n-            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n-            <Select onValueChange={setUnidad} required>\n-              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n-                <SelectValue placeholder=\"Seleccione la unidad\" />\n-              </SelectTrigger>\n-              <SelectContent>\n-                <SelectItem value=\"unidad\">Unidad</SelectItem>\n-                <SelectItem value=\"kg\">Kg</SelectItem>\n-              </SelectContent>\n-            </Select>\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n-            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n-          </div>\n-        </div>\n-        \n-        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n-          Enviar Donación\n-        </Button>\n-      </form>\n-    </div>\n-  )\n-}\n-'use client'\n-\n-import { useState, useEffect } from 'react'\n-import { useRouter } from 'next/navigation'\n-import { Button } from \"@/components/ui/button\"\n-import { Input } from \"@/components/ui/input\"\n-import { Label } from \"@/components/ui/label\"\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n-\n-export function FormularioDonacionComponent() {\n-  const [unidad, setUnidad] = useState(\"\")\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n-  const [isOrganization, setIsOrganization] = useState(false)\n-  const [donorName, setDonorName] = useState(\"\")\n-  const [itemType, setItemType] = useState(\"\")\n-  const [quantity, setQuantity] = useState(\"\")\n-  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n-  const router = useRouter()\n-\n-  const checkAuthentication = async () => {\n-    const token = localStorage.getItem('authToken')\n-    if (!token) {\n-      router.push('/logind')\n-      return\n-    }\n-\n-    try {\n-      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n-        method: 'GET',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      if (data.charity && data.charity.userType === 'charity') {\n-        setIsAuthenticated(true)\n-        setIsOrganization(true)\n-      } else {\n-        router.push('/logind')\n-      }\n-    } catch (error) {\n-      console.error('Error obteniendo el usuario:', error)\n-      router.push('/logind')\n-    }\n-  }\n-\n-  useEffect(() => {\n-    checkAuthentication()\n-  }, [])\n-\n-  const handleSubmit = async (e) => {\n-    e.preventDefault()\n-\n-    const token = localStorage.getItem('authToken')\n-    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n-\n-    const donationData = {\n-      charityId,\n-      donorName,\n-      itemType,\n-      quantity,\n-      unit: unidad,\n-      valuePerUnit\n-    }\n-\n-    try {\n-      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-        body: JSON.stringify(donationData)\n-        console.log(donationData)\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      alert(data.message)\n-    } catch (error) {\n-      console.error('Error al enviar la donación:', error)\n-      alert(`Error al enviar la donación: ${error.message}`)\n-    }\n-  }\n-\n-  if (!isAuthenticated || !isOrganization) {\n-    return <div>Cargando...</div>\n-  }\n-\n-  return (\n-    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n-      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n-        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n-        \n-        <div className=\"space-y-4\">\n-          <div>\n-            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n-            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n-            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n-            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n-            <Select onValueChange={setUnidad} required>\n-              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n-                <SelectValue placeholder=\"Seleccione la unidad\" />\n-              </SelectTrigger>\n-              <SelectContent>\n-                <SelectItem value=\"unidad\">Unidad</SelectItem>\n-                <SelectItem value=\"kg\">Kg</SelectItem>\n-              </SelectContent>\n-            </Select>\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n-            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n-          </div>\n-        </div>\n-        \n-        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n-          Enviar Donación\n-        </Button>\n-      </form>\n-    </div>\n-  )\n-}\n-'use client'\n-\n-import { useState, useEffect } from 'react'\n-import { useRouter } from 'next/navigation'\n-import { Button } from \"@/components/ui/button\"\n-import { Input } from \"@/components/ui/input\"\n-import { Label } from \"@/components/ui/label\"\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n-\n-export function FormularioDonacionComponent() {\n-  const [unidad, setUnidad] = useState(\"\")\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n-  const [isOrganization, setIsOrganization] = useState(false)\n-  const [donorName, setDonorName] = useState(\"\")\n-  const [itemType, setItemType] = useState(\"\")\n-  const [quantity, setQuantity] = useState(\"\")\n-  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n-  const router = useRouter()\n-\n-  const checkAuthentication = async () => {\n-    const token = localStorage.getItem('authToken')\n-    if (!token) {\n-      router.push('/logind')\n-      return\n-    }\n-\n-    try {\n-      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n-        method: 'GET',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      if (data.charity && data.charity.userType === 'charity') {\n-        setIsAuthenticated(true)\n-        setIsOrganization(true)\n-      } else {\n-        router.push('/logind')\n-      }\n-    } catch (error) {\n-      console.error('Error obteniendo el usuario:', error)\n-      router.push('/logind')\n-    }\n-  }\n-\n-  useEffect(() => {\n-    checkAuthentication()\n-  }, [])\n-\n-  const handleSubmit = async (e) => {\n-    e.preventDefault()\n-\n-    const token = localStorage.getItem('authToken')\n-    const charityId = localStorage.getItem('charityId') // Asegúrate de tener el charityId almacenado en algún lugar\n-\n-    const donationData = {\n-      charityId,\n-      donorName,\n-      itemType,\n-      quantity,\n-      unit: unidad,\n-      valuePerUnit\n-    }\n-\n-    try {\n-      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-        body: JSON.stringify(donationData)\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      alert(data.message)\n-    } catch (error) {\n-      console.error('Error al enviar la donación:', error)\n-      alert(`Error al enviar la donación: ${error.message}`)\n-    }\n-  }\n-\n-  if (!isAuthenticated || !isOrganization) {\n-    return <div>Cargando...</div>\n-  }\n-\n-  return (\n-    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n-      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n-        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n-        \n-        <div className=\"space-y-4\">\n-          <div>\n-            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n-            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n-            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n-            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n-            <Select onValueChange={setUnidad} required>\n-              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n-                <SelectValue placeholder=\"Seleccione la unidad\" />\n-              </SelectTrigger>\n-              <SelectContent>\n-                <SelectItem value=\"unidad\">Unidad</SelectItem>\n-                <SelectItem value=\"kg\">Kg</SelectItem>\n-              </SelectContent>\n-            </Select>\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n-            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n-          </div>\n-        </div>\n-        \n-        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n-          Enviar Donación\n-        </Button>\n-      </form>\n-    </div>\n-  )\n-}\n-'use client'\n-\n-import { useState, useEffect } from 'react'\n-import { useRouter } from 'next/navigation'\n-import { Button } from \"@/components/ui/button\"\n-import { Input } from \"@/components/ui/input\"\n-import { Label } from \"@/components/ui/label\"\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n-\n-export function FormularioDonacionComponent() {\n-  const [unidad, setUnidad] = useState(\"\")\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n-  const [isOrganization, setIsOrganization] = useState(false)\n-  const router = useRouter()\n-\n-  const checkAuthentication = async () => {\n-    const token = localStorage.getItem('authToken')\n-    if (!token) {\n-      router.push('/logind')\n-      return\n-    }\n-\n-    try {\n-      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n-        method: 'GET',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        },\n-      })\n-\n-      if (!res.ok) {\n-        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n-      }\n-\n-      const data = await res.json()\n-      if (data.charity && data.charity.userType === 'charity') {\n-        setIsAuthenticated(true)\n-        setIsOrganization(true)\n-      } else {\n-        router.push('/logind')\n-      }\n-    } catch (error) {\n-      console.error('Error obteniendo el usuario:', error)\n-      router.push('/logind')\n-    }\n-  }\n-\n-  useEffect(() => {\n-    checkAuthentication()\n-  }, [])\n-\n-  if (!isAuthenticated || !isOrganization) {\n-    return <div>Cargando...</div>\n-  }\n-\n-  return (\n-    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n-      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\">\n-        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n-        \n-        <div className=\"space-y-4\">\n-          <div>\n-            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n-            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n-            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n-            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n-            <Select onValueChange={setUnidad} required>\n-              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n-                <SelectValue placeholder=\"Seleccione la unidad\" />\n-              </SelectTrigger>\n-              <SelectContent>\n-                <SelectItem value=\"unidad\">Unidad</SelectItem>\n-                <SelectItem value=\"kg\">Kg</SelectItem>\n-              </SelectContent>\n-            </Select>\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n-            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-        </div>\n-        \n-        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n-          Enviar Donación\n-        </Button>\n-      </form>\n-    </div>\n-  )\n-}\n-'use client'\n-\n-import { useState } from 'react'\n-import { Button } from \"@/components/ui/button\"\n-import { Input } from \"@/components/ui/input\"\n-import { Label } from \"@/components/ui/label\"\n-import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n-\n-export function FormularioDonacionComponent() {\n-  const [unidad, setUnidad] = useState(\"\")\n-\n-  return (\n-    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n-      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\">\n-        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n-        \n-        <div className=\"space-y-4\">\n-          <div>\n-            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n-            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n-            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n-            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n-            <Select onValueChange={setUnidad} required>\n-              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n-                <SelectValue placeholder=\"Seleccione la unidad\" />\n-              </SelectTrigger>\n-              <SelectContent>\n-                <SelectItem value=\"unidad\">Unidad</SelectItem>\n-                <SelectItem value=\"kg\">Kg</SelectItem>\n-              </SelectContent>\n-            </Select>\n-          </div>\n-          \n-          <div>\n-            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n-            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n-          </div>\n-        </div>\n-        \n-        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n-          Enviar Donación\n-        </Button>\n-      </form>\n-    </div>\n-  )\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951849009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const [donorName, setDonorName] = useState(\"\")\n+  const [itemType, setItemType] = useState(\"\")\n+  const [quantity, setQuantity] = useState(\"\")\n+  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n+  const [charityId, setCharityId] = useState(\"\")\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+        setCharityId(data.charity.id) // Guardar charityId en el estado\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault()\n+\n+    const token = localStorage.getItem('authToken')\n+\n+    const donationData = {\n+      charityId,\n+      donorName,\n+      itemType,\n+      quantity: parseFloat(quantity), // Asegurarse de que quantity sea un número\n+      unit: unidad,\n+      valuePerUnit: parseFloat(valuePerUnit) // Asegurarse de que valuePerUnit sea un número\n+    }\n+\n+    try {\n+      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+        body: JSON.stringify(donationData)\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      alert(data.message)\n+    } catch (error) {\n+      console.error('Error al enviar la donación:', error)\n+      alert(`Error al enviar la donación: ${error.message}`)\n+    }\n+  }\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731951914759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n           'Authorization': `Bearer ${token}`\n         },\n         body: JSON.stringify(donationData)\n       })\n+      lo\n \n       if (!res.ok) {\n         throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n       }\n"
                },
                {
                    "date": 1731951921845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n           'Authorization': `Bearer ${token}`\n         },\n         body: JSON.stringify(donationData)\n       })\n-      lo\n+      console.log\n \n       if (!res.ok) {\n         throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n       }\n"
                },
                {
                    "date": 1731951928445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,146 @@\n+'use client'\n+\n+import { useState, useEffect } from 'react'\n+import { useRouter } from 'next/navigation'\n+import { Button } from \"@/components/ui/button\"\n+import { Input } from \"@/components/ui/input\"\n+import { Label } from \"@/components/ui/label\"\n+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n+\n+export function FormularioDonacionComponent() {\n+  const [unidad, setUnidad] = useState(\"\")\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isOrganization, setIsOrganization] = useState(false)\n+  const [donorName, setDonorName] = useState(\"\")\n+  const [itemType, setItemType] = useState(\"\")\n+  const [quantity, setQuantity] = useState(\"\")\n+  const [valuePerUnit, setValuePerUnit] = useState(\"\")\n+  const [charityId, setCharityId] = useState(\"\")\n+  const router = useRouter()\n+\n+  const checkAuthentication = async () => {\n+    const token = localStorage.getItem('authToken')\n+    if (!token) {\n+      router.push('/logind')\n+      return\n+    }\n+\n+    try {\n+      const res = await fetch(`http://localhost:3001/profile?secret_token=${token}`, {\n+        method: 'GET',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+      })\n+\n+      if (!res.ok) {\n+        throw new Error(`Error fetching profile: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      if (data.charity && data.charity.userType === 'charity') {\n+        setIsAuthenticated(true)\n+        setIsOrganization(true)\n+        setCharityId(data.charity.id) // Guardar charityId en el estado\n+      } else {\n+        router.push('/logind')\n+      }\n+    } catch (error) {\n+      console.error('Error obteniendo el usuario:', error)\n+      router.push('/logind')\n+    }\n+  }\n+\n+  useEffect(() => {\n+    checkAuthentication()\n+  }, [])\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault()\n+\n+    const token = localStorage.getItem('authToken')\n+\n+    const donationData = {\n+      charityId,\n+      donorName,\n+      itemType,\n+      quantity: parseFloat(quantity), // Asegurarse de que quantity sea un número\n+      unit: unidad,\n+      valuePerUnit: parseFloat(valuePerUnit) // Asegurarse de que valuePerUnit sea un número\n+    }\n+\n+    try {\n+      const res = await fetch('http://localhost:3001/mercadopago/donations/in-kind', {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        },\n+        body: JSON.stringify(donationData)\n+      })\n+      console.log(do)\n+\n+      if (!res.ok) {\n+        throw new Error(`Error al enviar la donación: ${res.status} ${res.statusText}`)\n+      }\n+\n+      const data = await res.json()\n+      alert(data.message)\n+    } catch (error) {\n+      console.error('Error al enviar la donación:', error)\n+      alert(`Error al enviar la donación: ${error.message}`)\n+    }\n+  }\n+\n+  if (!isAuthenticated || !isOrganization) {\n+    return <div>Cargando...</div>\n+  }\n+\n+  return (\n+    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n+      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\" onSubmit={handleSubmit}>\n+        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n+        \n+        <div className=\"space-y-4\">\n+          <div>\n+            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n+            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required value={donorName} onChange={(e) => setDonorName(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n+            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required value={itemType} onChange={(e) => setItemType(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n+            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n+            <Select onValueChange={setUnidad} required>\n+              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n+                <SelectValue placeholder=\"Seleccione la unidad\" />\n+              </SelectTrigger>\n+              <SelectContent>\n+                <SelectItem value=\"unidad\">Unidad</SelectItem>\n+                <SelectItem value=\"kg\">Kg</SelectItem>\n+              </SelectContent>\n+            </Select>\n+          </div>\n+          \n+          <div>\n+            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n+            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required value={valuePerUnit} onChange={(e) => setValuePerUnit(e.target.value)} />\n+          </div>\n+        </div>\n+        \n+        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n+          Enviar Donación\n+        </Button>\n+      </form>\n+    </div>\n+  )\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731950867604,
            "name": "Commit-0",
            "content": "'use client'\n\nimport { useState } from 'react'\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\nexport function FormularioDonacionComponent() {\n  const [unidad, setUnidad] = useState(\"\")\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-[#ECE3D4]\">\n      <form className=\"w-full max-w-md bg-[#ECE3D4] p-8 rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-bold mb-6 text-[#042637] text-center\">Formulario de Donación</h2>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"nombre\" className=\"text-[#042637]\">Nombre del Donante</Label>\n            <Input id=\"nombre\" className=\"border-[#042637] text-[#042637]\" required />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"producto\" className=\"text-[#042637]\">Tipo de Producto</Label>\n            <Input id=\"producto\" className=\"border-[#042637] text-[#042637]\" required />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"cantidad\" className=\"text-[#042637]\">Cantidad</Label>\n            <Input id=\"cantidad\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"unidad\" className=\"text-[#042637]\">Unidad</Label>\n            <Select onValueChange={setUnidad} required>\n              <SelectTrigger className=\"border-[#042637] text-[#042637]\">\n                <SelectValue placeholder=\"Seleccione la unidad\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"unidad\">Unidad</SelectItem>\n                <SelectItem value=\"kg\">Kg</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"valor\" className=\"text-[#042637]\">Valor por {unidad || 'unidad'}</Label>\n            <Input id=\"valor\" type=\"number\" min=\"0\" step=\"0.01\" className=\"border-[#042637] text-[#042637]\" required />\n          </div>\n        </div>\n        \n        <Button type=\"submit\" className=\"w-full mt-6 bg-[#E1DDBF] text-[#042637] hover:bg-[#ECE3D4] hover:text-[#042637] border border-[#042637]\">\n          Enviar Donación\n        </Button>\n      </form>\n    </div>\n  )\n}"
        }
    ]
}