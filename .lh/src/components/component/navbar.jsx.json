{
    "sourceFile": "src/components/component/navbar.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1731395903465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731395920013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+        )}\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731395925524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,135 +90,8 @@\n               prefetch={false}\n             >\n               Profile\n             </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-        )}\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n             <Link\n               href=\"/profile\"\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n               prefetch={false}\n@@ -263,6 +136,6 @@\n       <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n     </svg>\n   );\n }\n-/mensajes\n+\n export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731395930733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n             >\n               Profile\n             </Link>\n             <Link\n-              href=\"/profile\"\n+              href=\"/mesa\"\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n               prefetch={false}\n             >\n               Profile\n"
                },
                {
                    "date": 1731395936043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n             >\n               Profile\n             </Link>\n             <Link\n-              href=\"/mesa\"\n+              href=\"/mens\"\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n               prefetch={false}\n             >\n               Profile\n"
                },
                {
                    "date": 1731395941955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,13 +91,13 @@\n             >\n               Profile\n             </Link>\n             <Link\n-              href=\"/mens\"\n+              href=\"/mensajes\"\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n               prefetch={false}\n             >\n-              Profile\n+              men\n             </Link>\n             <button\n               onClick={handleLogout}\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n"
                },
                {
                    "date": 1731823556038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n               href=\"/mensajes\"\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n               prefetch={false}\n             >\n-              men\n+              mensajes\n             </Link>\n             <button\n               onClick={handleLogout}\n               className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n@@ -112,8 +112,15 @@\n             prefetch={false}\n           >\n             Login\n           </Link>\n+                    <Link\n+                    href=\"/logind\"\n+                    className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+                    prefetch={false}\n+                  >\n+                    Login\n+                  </Link>\n         )}\n       </nav>\n     </header>\n   );\n"
                },
                {
                    "date": 1731823569628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,16 +112,12 @@\n             prefetch={false}\n           >\n             Login\n           </Link>\n-                    <Link\n-                    href=\"/logind\"\n-                    className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-                    prefetch={false}\n-                  >\n-                    Login\n-                  </Link>\n+          \n         )}\n+\n+        \n       </nav>\n     </header>\n   );\n }\n"
                },
                {
                    "date": 1731823574705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+\n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823585782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+\n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823598890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,305 +116,9 @@\n           \n         )}\n \n \n-      </nav>\n-    </header>\n-  );\n-}\n \n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-        (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-\n-\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-\n         \n       </nav>\n     </header>\n   );\n"
                },
                {
                    "date": 1731823607602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+\n+\n+\n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823614983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        ({}\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+\n+\n+\n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823628065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,18 +114,9 @@\n             Login\n           </Link>\n           \n         )}\n-        ({}\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n+        \n \n \n \n \n@@ -152,307 +143,5 @@\n     </svg>\n   );\n }\n \n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-        : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-\n-\n-\n-\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-\n-\n-\n-        \n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823643196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Home\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        \n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823652397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n           href=\"/organizaciones\"\n           className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n           prefetch={false}\n         >\n-          Home\n+          Publicaciones\n         </Link>\n         {authToken ? (\n           <>\n             <Link\n@@ -147,152 +147,5 @@\n     </svg>\n   );\n }\n \n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-        \n-\n-\n-\n-\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1731823658287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n         >\n           Home\n         </Link>\n         <Link\n-          href=\"/organizaciones\"\n+          href=\"/publicaciones\"\n           className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n           prefetch={false}\n         >\n           Publicaciones\n"
                },
                {
                    "date": 1731824234217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Organizaciones\n+        </Link>\n+        <Link\n+          href=\"/publicaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Publicaciones\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        \n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732066481995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+\"use client\";\n+\n+import Link from \"next/link\";\n+import { useRouter } from \"next/navigation\";\n+import { useEffect, useState } from \"react\";\n+import { useAuth } from '../../lib/AuthContext';\n+\n+function Navbar() {\n+  const router = useRouter();\n+  const { authToken, login, logout } = useAuth();\n+  const [isLoading, setIsLoading] = useState(true);\n+\n+  useEffect(() => {\n+    const token = localStorage.getItem('authToken');\n+    // console.log('Token recuperado de localStorage:', token); // Validación\n+    if (token) {\n+      login(token);\n+    }\n+    setIsLoading(false);\n+    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n+  }, [login]);\n+\n+  const handleLogout = async () => {\n+    const token = localStorage.getItem('authToken');\n+    if (!token) {\n+      // console.error('Token no encontrado');\n+      return;\n+    }\n+\n+    try {\n+      const response = await fetch(`https://rwggxws5-3001.brs.devtunnels.ms/logout?secret_token=${token}`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'Authorization': `Bearer ${token}`\n+        }\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        // console.log(data.message);\n+        localStorage.removeItem('authToken');\n+        logout();\n+        router.push('/logind'); // Corrige la ruta de redirección\n+      } else {\n+        const errorData = await response.json();\n+        // console.error(errorData.message);\n+      }\n+    } catch (error) {\n+      // console.error('Error al cerrar sesión:', error);\n+    }\n+  };\n+\n+  const handleLogin = () => {\n+    const token = '{token}'; // Reemplaza esto con el token real\n+    localStorage.setItem('authToken', token);\n+    login(token);\n+    // console.log('Token almacenado:', token); // Validación\n+  };\n+\n+  useEffect(() => {\n+    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n+      router.replace(router.asPath);\n+    }\n+  }, [authToken, router]);\n+\n+  if (isLoading) {\n+    return null; // O cualquier otro componente de carga que prefieras\n+  }\n+\n+  return (\n+    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n+      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n+        <MountainIcon className=\"w-6 h-6\" />\n+        <span className=\"sr-only\">Acme Inc</span>\n+      </Link>\n+      <nav className=\"flex items-center gap-6\">\n+        <Link\n+          href=\"/organizaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Organizaciones\n+        </Link>\n+        <Link\n+          href=\"/publicaciones\"\n+          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+          prefetch={false}\n+        >\n+          Publicaciones\n+        </Link>\n+        {authToken ? (\n+          <>\n+            <Link\n+              href=\"/profile\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              Profile\n+            </Link>\n+            <Link\n+              href=\"/mensajes\"\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+              prefetch={false}\n+            >\n+              mensajes\n+            </Link>\n+            <button\n+              onClick={handleLogout}\n+              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            >\n+              Logout\n+            </button>\n+          </>\n+        ) : (\n+          <Link\n+            href=\"/logind\"\n+            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n+            prefetch={false}\n+          >\n+            Login\n+          </Link>\n+          \n+        )}\n+        \n+\n+      </nav>\n+    </header>\n+  );\n+}\n+\n+function MountainIcon(props) {\n+  return (\n+    <svg\n+      {...props}\n+      xmlns=\"http://www.w3.org/2000/svg\"\n+      width=\"24\"\n+      height=\"24\"\n+      viewBox=\"0 0 24 24\"\n+      fill=\"none\"\n+      stroke=\"currentColor\"\n+      strokeWidth=\"2\"\n+      strokeLinecap=\"round\"\n+      strokeLinejoin=\"round\"\n+    >\n+      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n+    </svg>\n+  );\n+}\n+\n+export default Navbar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1732154188629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,159 +27,8 @@\n       return;\n     }\n \n     try {\n-      const response = await fetch(`https://rwggxws5-3001.brs.devtunnels.ms/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Organizaciones\n-        </Link>\n-        <Link\n-          href=\"/publicaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Publicaciones\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-        \n-\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n       const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n         method: 'POST',\n         headers: {\n           'Content-Type': 'application/json',\n@@ -298,156 +147,5 @@\n     </svg>\n   );\n }\n \n-export default Navbar;\n-\"use client\";\n-\n-import Link from \"next/link\";\n-import { useRouter } from \"next/navigation\";\n-import { useEffect, useState } from \"react\";\n-import { useAuth } from '../../lib/AuthContext';\n-\n-function Navbar() {\n-  const router = useRouter();\n-  const { authToken, login, logout } = useAuth();\n-  const [isLoading, setIsLoading] = useState(true);\n-\n-  useEffect(() => {\n-    const token = localStorage.getItem('authToken');\n-    // console.log('Token recuperado de localStorage:', token); // Validación\n-    if (token) {\n-      login(token);\n-    }\n-    setIsLoading(false);\n-    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n-  }, [login]);\n-\n-  const handleLogout = async () => {\n-    const token = localStorage.getItem('authToken');\n-    if (!token) {\n-      // console.error('Token no encontrado');\n-      return;\n-    }\n-\n-    try {\n-      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n-        method: 'POST',\n-        headers: {\n-          'Content-Type': 'application/json',\n-          'Authorization': `Bearer ${token}`\n-        }\n-      });\n-\n-      if (response.ok) {\n-        const data = await response.json();\n-        // console.log(data.message);\n-        localStorage.removeItem('authToken');\n-        logout();\n-        router.push('/logind'); // Corrige la ruta de redirección\n-      } else {\n-        const errorData = await response.json();\n-        // console.error(errorData.message);\n-      }\n-    } catch (error) {\n-      // console.error('Error al cerrar sesión:', error);\n-    }\n-  };\n-\n-  const handleLogin = () => {\n-    const token = '{token}'; // Reemplaza esto con el token real\n-    localStorage.setItem('authToken', token);\n-    login(token);\n-    // console.log('Token almacenado:', token); // Validación\n-  };\n-\n-  useEffect(() => {\n-    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n-      router.replace(router.asPath);\n-    }\n-  }, [authToken, router]);\n-\n-  if (isLoading) {\n-    return null; // O cualquier otro componente de carga que prefieras\n-  }\n-\n-  return (\n-    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n-      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n-        <MountainIcon className=\"w-6 h-6\" />\n-        <span className=\"sr-only\">Acme Inc</span>\n-      </Link>\n-      <nav className=\"flex items-center gap-6\">\n-        <Link\n-          href=\"/organizaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Home\n-        </Link>\n-        <Link\n-          href=\"/publicaciones\"\n-          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-          prefetch={false}\n-        >\n-          Publicaciones\n-        </Link>\n-        {authToken ? (\n-          <>\n-            <Link\n-              href=\"/profile\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              Profile\n-            </Link>\n-            <Link\n-              href=\"/mensajes\"\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-              prefetch={false}\n-            >\n-              mensajes\n-            </Link>\n-            <button\n-              onClick={handleLogout}\n-              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            >\n-              Logout\n-            </button>\n-          </>\n-        ) : (\n-          <Link\n-            href=\"/logind\"\n-            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n-            prefetch={false}\n-          >\n-            Login\n-          </Link>\n-          \n-        )}\n-        \n-\n-      </nav>\n-    </header>\n-  );\n-}\n-\n-function MountainIcon(props) {\n-  return (\n-    <svg\n-      {...props}\n-      xmlns=\"http://www.w3.org/2000/svg\"\n-      width=\"24\"\n-      height=\"24\"\n-      viewBox=\"0 0 24 24\"\n-      fill=\"none\"\n-      stroke=\"currentColor\"\n-      strokeWidth=\"2\"\n-      strokeLinecap=\"round\"\n-      strokeLinejoin=\"round\"\n-    >\n-      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n-    </svg>\n-  );\n-}\n-\n export default Navbar;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1731395903465,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from '../../lib/AuthContext';\n\nfunction Navbar() {\n  const router = useRouter();\n  const { authToken, login, logout } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    // console.log('Token recuperado de localStorage:', token); // Validación\n    if (token) {\n      login(token);\n    }\n    setIsLoading(false);\n    // console.log('Estado de autenticación actualizado:', !!token); // Validación\n  }, [login]);\n\n  const handleLogout = async () => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      // console.error('Token no encontrado');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3001/logout?secret_token=${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        // console.log(data.message);\n        localStorage.removeItem('authToken');\n        logout();\n        router.push('/logind'); // Corrige la ruta de redirección\n      } else {\n        const errorData = await response.json();\n        // console.error(errorData.message);\n      }\n    } catch (error) {\n      // console.error('Error al cerrar sesión:', error);\n    }\n  };\n\n  const handleLogin = () => {\n    const token = '{token}'; // Reemplaza esto con el token real\n    localStorage.setItem('authToken', token);\n    login(token);\n    // console.log('Token almacenado:', token); // Validación\n  };\n\n  useEffect(() => {\n    if (authToken && router && typeof router.replace === 'function' && router.asPath) {\n      router.replace(router.asPath);\n    }\n  }, [authToken, router]);\n\n  if (isLoading) {\n    return null; // O cualquier otro componente de carga que prefieras\n  }\n\n  return (\n    <header className=\" fixed top-0 left-0 right-0 z-50 flex items-center justify-between h-16 px-6 bg-gradient-to-r from-primary to-secondary text-primary-foreground\">\n      <Link href=\"/\" className=\"flex items-center gap-2\" prefetch={false}>\n        <MountainIcon className=\"w-6 h-6\" />\n        <span className=\"sr-only\">Acme Inc</span>\n      </Link>\n      <nav className=\"flex items-center gap-6\">\n        <Link\n          href=\"/organizaciones\"\n          className=\" text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n          prefetch={false}\n        >\n          Home\n        </Link>\n        {authToken ? (\n          <>\n            <Link\n              href=\"/profile\"\n              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n              prefetch={false}\n            >\n              Profile\n            </Link>\n            <button\n              onClick={handleLogout}\n              className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n            >\n              Logout\n            </button>\n          </>\n        ) : (\n          <Link\n            href=\"/logind\"\n            className=\"text-[#4c7d78] text-sm font-medium text-primary-foreground hover:text-foreground transition-colors\"\n            prefetch={false}\n          >\n            Login\n          </Link>\n        )}\n      </nav>\n    </header>\n  );\n}\n\nfunction MountainIcon(props) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"m8 3 4 8 5-5 5 15H2L8 3z\" />\n    </svg>\n  );\n}\n/mensajes\nexport default Navbar;"
        }
    ]
}